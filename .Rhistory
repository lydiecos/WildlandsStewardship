# Combine issue data with management data
cc=distinct(cc)
dd=distinct(dd)
ee=merge.data.frame(cc,dd,by="GlobalID")
ee=distinct(ee)
colnames(ee)[3] <- "Subtype"
# reformat date columns bc they're causing issues
#as.POSIXct(Poly$CreationDate, format = "%Y-%M-%D %H:%M:%S")
Point$CreationDate <- as.POSIXct.Date(Point$CreationDate)
Point$EditDate <- as.POSIXct.Date(Point$EditDate)
# Add in data with no management actions
Issue_Mgmt_Point <- data.frame(ee)
for (gi in Point$GlobalID){
if (gi %in% ee$GlobalID) {
} else Issue_Mgmt_Point <- bind_rows(Issue_Mgmt_Point, Point[which(Point$GlobalID == gi),])
}
# Change "na" text to actual NAs
Issue_Mgmt_Point <- Issue_Mgmt_Point %>%
mutate(across(.cols=c("InvSpecies_1", "InvSpecies_2", "InvSpecies_3",
"InvSpecies_4", "InvSpecies_5", "Mature",
"Percent_CoverAffected_1", "Severity",
"Percent_CoverAffected_2", "Percent_CoverAffected_3",
"Percent_CoverAffected_4", "Percent_CoverAffected_5",
"Resolved", "Issue", "Issue_LocationOrFeature",
"Treat_Method_1", "Chemical_1", "Treat_Method_2",
"Chemical_2","Adjuvant", "Percent_CntrlEffective_"),
na_if, "na"))
# Specify point subtype
Issue_Mgmt_Point <- Issue_Mgmt_Point %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,'0' = 'Misc', '1' = 'Weed Occurrence',
'2' = 'Failed Structure', '3' = 'Beaver Dam',
'4' = 'Soil Sample'),
Geom = "Point")
# Fix NumTreatDays format
Issue_Mgmt_Point$NumTreatDays <- as.integer(Issue_Mgmt_Point$NumTreatDays)
#### Combined Data ####
Issue_Mgmt_All <- bind_rows(Issue_Mgmt_Poly, Issue_Mgmt_Line, Issue_Mgmt_Point)
# Remove white spaces to consolidate site names
Issue_Mgmt_All$Site <- trimws(Issue_Mgmt_All$Site)
# Make site names uniform
# Issue_Mgmt_All <- Issue_Mgmt_All %>%
#   mutate(Site = if_else(Site == "Alexander Farm Wildlands", "Alexander Farm", Site),
#          Site = if_else(Site == "Deep Meadow Mitigation Site", "Deep Meadow", Site),
#          Site = if_else(Site == "Liberty Rock Site", "Liberty Rock", Site),
#          Site = if_else(Site == "Little River Ford I and II", "Little River Ford", Site),
#          Site = if_else(Site == "Lone Hickory Mitigation Site", "Lone Hickory", Site),
#          Site = if_else(Site == "McClenny Acres Bank", "McClenny", Site),
#          Site = if_else(Site == "Moccasin Creek-Buffer (G)", "Moccasin Creek", Site))
# Add Lead Steward
n <- 1
for (s in Issue_Mgmt_All$Site){
if (s %in% LeadSteward$Site){
Issue_Mgmt_All$Lead_Steward[n] <- LeadSteward$Steward[LeadSteward$Site == s]
} else {
Issue_Mgmt_All$Lead_Steward < NA
}
n = n + 1
}
# Make Subtype a factor
Issue_Mgmt_All$Subtype <- factor(Issue_Mgmt_All$Subtype)
# Remove underscores that can interfere with TeX
#names(Issue_Mgmt_All) <- gsub("_", "", names(Issue_Mgmt_All))
# Export complete dataset
write.csv("./data/Issue_Mgmt_All")
#### Sort by Issue ####
Boundary <- Issue_Mgmt_All %>%
filter(Subtype %in% c("CE Encroachment", "Boundary Issue")) %>%
select(OBJECTID, Site, Year, Issue, Issue_Desc, Treat_Desc, TreatDate, Resolved,
Lead_Steward, Geom) %>%
mutate(TreatDate = format(TreatDate, "%m/%Y")) %>%
arrange(Site, desc(Year), desc(Resolved))
Channel <- Issue_Mgmt_All %>%
filter(Subtype %in% c("Needs Livestakes", "Channel Stability/Erosion",
"Failed Structure")) %>%
select(OBJECTID, Site, Year, Subtype, Issue, Issue_Desc, Treat_Desc, TreatDate, Resolved,
Lead_Steward, Geom) %>%
mutate(TreatDate = format(TreatDate, "%m/%Y")) %>%
arrange(Site, desc(Year), desc(Resolved))
Vegetation <- Issue_Mgmt_All %>%
filter(Subtype == "Vegetation Issue") %>%
select(OBJECTID, Site, Year, Issue, Issue_Desc,
Treat_Desc, Treat_Method_1, TreatDate, Resolved,
Lead_Steward, Geom) %>%
mutate(TreatDate = format(TreatDate, "%m/%Y")) %>%
arrange(Site, desc(Year), desc(Resolved))
Weed <- Issue_Mgmt_All %>%
filter(Subtype %in% c("Weed Occurrence", "In-Stream Vegetation")) %>%
select(OBJECTID, Site, Year, InvSpecies_1, InvSpecies_2,
Issue_Desc, Treat_Desc, Treat_Method_1, TreatDate,
Resolved, Lead_Steward, Geom) %>%
mutate(TreatDate = format(TreatDate, "%m/%Y")) %>%
arrange(Site, desc(Year), InvSpecies_1, desc(Resolved))
Misc <- Issue_Mgmt_All %>%
filter(Subtype %in% c("Misc", "Beaver Dam", "Soil Sample")) %>%
select(OBJECTID, Site, Year, Subtype, Issue_Desc, Issue_LocationOrFeature,
Treat_Desc, TreatDate, Resolved, Lead_Steward, Geom) %>%
mutate(TreatDate = format(TreatDate, "%m/%Y")) %>%
arrange(Site, desc(Year), desc(Resolved))
SiteAll <- Issue_Mgmt_All[Issue_Mgmt_All$Site == s,]
SiteB <- Boundary[Boundary$Site == s,]
SiteC <- Channel[Channel$Site == s,]
SiteV <- Vegetation[Vegetation$Site == s,]
SiteW <- Weed[Weed$Site == s,]
SiteM <- Misc[Misc$Site == s,]
unloadNamespace("kableExtra")
if(!is.na(any(CEpoly_sel$Name == s))){
CE_site <- arc.data2sf(arc.select(CEpoly, where_clause = paste("Name = '", s, "'", sep = "")))}
CEpoly <- arc.open("https://services2.arcgis.com/n5rY677NVyRuW3Ht/arcgis/rest/services/WEI_MitigationProject_CEs/FeatureServer/0")
CEpoly_sel <- arc.select(CEpoly)
#Import Streams layer & extract
Streams <- arc.open("https://services2.arcgis.com/n5rY677NVyRuW3Ht/arcgis/rest/services/AssetGDB_v1a/FeatureServer/10")
Streams_sel <- arc.select(Streams)
# Extract features as spatial dataframes
Point <- arc.open("https://services2.arcgis.com/n5rY677NVyRuW3Ht/arcgis/rest/services/StewardshipGDB_v4a/FeatureServer/2")
Point_sel <- arc.select(Point)
Line <- arc.open("https://services2.arcgis.com/n5rY677NVyRuW3Ht/arcgis/rest/services/StewardshipGDB_v4a/FeatureServer/1")
Line_sel <- arc.select(Line)
Poly <- arc.open("https://services2.arcgis.com/n5rY677NVyRuW3Ht/arcgis/rest/services/StewardshipGDB_v4a/FeatureServer/5")
Poly_sel <- arc.select(Poly)
SiteAll <- Issue_Mgmt_All[Issue_Mgmt_All$Site == s,]
SiteB <- Boundary[Boundary$Site == s,]
SiteC <- Channel[Channel$Site == s,]
SiteV <- Vegetation[Vegetation$Site == s,]
SiteW <- Weed[Weed$Site == s,]
SiteM <- Misc[Misc$Site == s,]
unloadNamespace("kableExtra")
if(!is.na(any(CEpoly_sel$Name == s))){
CE_site <- arc.data2sf(arc.select(CEpoly, where_clause = paste("Name = '", s, "'", sep = "")))}
if(!is.na(any(Streams_sel$Site == s))){
Streams_site <- arc.data2sf(arc.select(Streams, where_clause = paste("Site = '", s, "'", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 2)){
Point_C <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 1)){
Point_W <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == c(0,3,4))){
Point_M <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND (Subtype = 0 OR Subtype = 3 OR Subtype = 4)", sep = "")))
Point_M <- Point_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc',
'3' = 'Beaver Dam',
'4' = 'Soil Sample'))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 1)){
Line_B <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == c(2,4))){
Line_C <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND (Subtype = 2 OR Subtype = 4)", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 3)){
Line_W <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 0)){
Line_M <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Line_M <- Line_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 3)){
Poly_B <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 2)){
Poly_V <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 1)){
Poly_W <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 0)){
Poly_M <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Poly_M <- Poly_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
render("./scripts/StewGDB_sites_mapped.Rmd",
output_file = paste0('../reports/PDFMapbySite/report.', s, '.pdf'))
SiteAll <- Issue_Mgmt_All[Issue_Mgmt_All$Site == s,]
SiteB <- Boundary[Boundary$Site == s,]
SiteC <- Channel[Channel$Site == s,]
SiteV <- Vegetation[Vegetation$Site == s,]
SiteW <- Weed[Weed$Site == s,]
SiteM <- Misc[Misc$Site == s,]
unloadNamespace("kableExtra")
if(!is.na(any(CEpoly_sel$Name == s))){
CE_site <- arc.data2sf(arc.select(CEpoly, where_clause = paste("Name = '", s, "'", sep = "")))}
if(!is.na(any(Streams_sel$Site == s))){
Streams_site <- arc.data2sf(arc.select(Streams, where_clause = paste("Site = '", s, "'", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 2)){
Point_C <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 1)){
Point_W <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == c(0,3,4))){
Point_M <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND (Subtype = 0 OR Subtype = 3 OR Subtype = 4)", sep = "")))
Point_M <- Point_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc',
'3' = 'Beaver Dam',
'4' = 'Soil Sample'))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 1)){
Line_B <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == c(2,4))){
Line_C <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND (Subtype = 2 OR Subtype = 4)", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 3)){
Line_W <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 0)){
Line_M <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Line_M <- Line_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 3)){
Poly_B <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 2)){
Poly_V <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 1)){
Poly_W <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 0)){
Poly_M <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Poly_M <- Poly_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
render("./scripts/StewGDB_sites_mapped.Rmd",
output_file = paste0('../reports/PDFMapbySite/report.', s, '.pdf'))
View(Line_C)
SiteAll <- Issue_Mgmt_All[Issue_Mgmt_All$Site == s,]
SiteB <- Boundary[Boundary$Site == s,]
SiteC <- Channel[Channel$Site == s,]
SiteV <- Vegetation[Vegetation$Site == s,]
SiteW <- Weed[Weed$Site == s,]
SiteM <- Misc[Misc$Site == s,]
unloadNamespace("kableExtra")
if(!is.na(any(CEpoly_sel$Name == s))){
CE_site <- arc.data2sf(arc.select(CEpoly, where_clause = paste("Name = '", s, "'", sep = "")))}
if(!is.na(any(Streams_sel$Site == s))){
Streams_site <- arc.data2sf(arc.select(Streams, where_clause = paste("Site = '", s, "'", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 2)){
Point_C <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 1)){
Point_W <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == c(0,3,4))){
Point_M <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND (Subtype = 0 OR Subtype = 3 OR Subtype = 4)", sep = "")))
Point_M <- Point_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc',
'3' = 'Beaver Dam',
'4' = 'Soil Sample'))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 1)){
Line_B <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == c(2,4))){
Line_C <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND (Subtype = 2 OR Subtype = 4)", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 3)){
Line_W <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 0)){
Line_M <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Line_M <- Line_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 3)){
Poly_B <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 2)){
Poly_V <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 1)){
Poly_W <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 0)){
Poly_M <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Poly_M <- Poly_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
render("./scripts/StewGDB_sites_mapped.Rmd",
output_file = paste0('../reports/PDFMapbySite/report.', s, '.pdf'))
library(knitr)
library(tidyverse)
library(flextable)
options(knitr.kable.NA = '', knitr.table.format = "latex")
library(kableExtra)
library(gt)
library(ggmap)
library(ggrepel)
#library(array)
#library(booktabs)
#library(threeparttablex)
opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# text to reinsert in title: SiteB$Site[1]
# Instructions here for producing multiple PDFs: https://stackoverflow.com/questions/30422008/r-knitr-pdf-is-there-a-posssibility-to-automatically-save-pdf-reports-generate
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Needs Livestakes")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Needs Livestakes)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == "Needs Livestakes",]) +
geom_text_repel(data = Line_C[Line_C$Subtype == "Needs Livestakes",], aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Needs Livestakes")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Needs Livestakes)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
#{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == "Needs Livestakes",]) +
geom_text_repel(data = Line_C[Line_C$Subtype == "Needs Livestakes",], aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
Line_C[Line_C$Subtype == "Needs Livestakes",]
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Needs Livestakes")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Needs Livestakes)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == 4,]) +
geom_text_repel(data = Line_C[Line_C$Subtype == 4,], aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
SiteC_table <- SiteC %>%
rename(Description = Issue_Desc,
Treatment = Treat_Desc) %>%
filter(!is.na(Site)) %>%
select(1,3:(length(SiteC)-2)) %>%
discard(~all(is.na(.) | . == "")) %>%
mutate(across(everything(), ~gsub(pattern = "_", replacement = "", .)),
across(everything(), ~gsub(pattern = "&", replacement = "and", .)),
across(everything(), ~gsub(pattern = "%", replacement = " pct", .)),
across(everything(), ~gsub(pattern = "#", replacement = "", .)))
if(nrow(SiteC_table) > 0){
kbl(SiteC_table, row.names = F, escape = F, booktabs = T) %>%
column_spec(5:6, width = "2in") %>%
kable_styling(font_size = 8, latex_options = "striped",
position = "left")}
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Channel Stability/Erosion")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Channel Stability/Erosion)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == 2,]) +
geom_text_repel(data = Line_C[Line_C$Subtype == 2,],
aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
if(nrow(SiteC_table) > 0){
cat("\n\\pagebreak\n")}
SiteAll <- Issue_Mgmt_All[Issue_Mgmt_All$Site == s,]
SiteB <- Boundary[Boundary$Site == s,]
SiteC <- Channel[Channel$Site == s,]
SiteV <- Vegetation[Vegetation$Site == s,]
SiteW <- Weed[Weed$Site == s,]
SiteM <- Misc[Misc$Site == s,]
unloadNamespace("kableExtra")
if(!is.na(any(CEpoly_sel$Name == s))){
CE_site <- arc.data2sf(arc.select(CEpoly, where_clause = paste("Name = '", s, "'", sep = "")))}
if(!is.na(any(Streams_sel$Site == s))){
Streams_site <- arc.data2sf(arc.select(Streams, where_clause = paste("Site = '", s, "'", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 2)){
Point_C <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 1)){
Point_W <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == c(0,3,4))){
Point_M <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND (Subtype = 0 OR Subtype = 3 OR Subtype = 4)", sep = "")))
Point_M <- Point_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc',
'3' = 'Beaver Dam',
'4' = 'Soil Sample'))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 1)){
Line_B <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == c(2,4))){
Line_C <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND (Subtype = 2 OR Subtype = 4)", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 3)){
Line_W <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 0)){
Line_M <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Line_M <- Line_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 3)){
Poly_B <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 2)){
Poly_V <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 1)){
Poly_W <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 0)){
Poly_M <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Poly_M <- Poly_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
render("./scripts/StewGDB_sites_mapped.Rmd",
output_file = paste0('../reports/PDFMapbySite/report.', s, '.pdf'))
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Needs Livestakes")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Needs Livestakes)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == 4,], aes(size = 3)) +
geom_text_repel(data = Line_C[Line_C$Subtype == 4,], aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Needs Livestakes")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Needs Livestakes)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == 4,], linewidth = 3) +
geom_text_repel(data = Line_C[Line_C$Subtype == 4,], aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Needs Livestakes")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Needs Livestakes)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == 4,], linewidth = 2) +
geom_text_repel(data = Line_C[Line_C$Subtype == 4,], aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Needs Livestakes")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Needs Livestakes)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == 4,], linewidth = 2) +
geom_text_repel(data = Line_C[Line_C$Subtype == 4,], aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Needs Livestakes")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Needs Livestakes)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == 4,], linewidth = 2) +
geom_text_repel(data = Line_C[Line_C$Subtype == 4,], aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Needs Livestakes")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Needs Livestakes)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == 4,], linewidth = 1) +
geom_text_repel(data = Line_C[Line_C$Subtype == 4,], aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
if(nrow(SiteC_table) > 0){
if(any(SiteC$Subtype == "Channel Stability/Erosion")){
ggplot() +
theme_void() +
labs(title = "Channel Issues (Channel Stability/Erosion)") +
geom_sf(data = CE_site, colour = "red", fill = NA) +
{if(any(Streams_site$Site == s))geom_sf(data = Streams_site, colour = "blue")} +
geom_sf(data = Line_C[Line_C$Subtype == 2,], linewidth = 1) +
geom_text_repel(data = Line_C[Line_C$Subtype == 2,],
aes(label = OBJECTID, geometry = geom),
stat = "sf_coordinates", size = 3)}}
if(nrow(SiteC_table) > 0){
cat("\n\\pagebreak\n")}
SiteAll <- Issue_Mgmt_All[Issue_Mgmt_All$Site == s,]
SiteB <- Boundary[Boundary$Site == s,]
SiteC <- Channel[Channel$Site == s,]
SiteV <- Vegetation[Vegetation$Site == s,]
SiteW <- Weed[Weed$Site == s,]
SiteM <- Misc[Misc$Site == s,]
unloadNamespace("kableExtra")
if(!is.na(any(CEpoly_sel$Name == s))){
CE_site <- arc.data2sf(arc.select(CEpoly, where_clause = paste("Name = '", s, "'", sep = "")))}
if(!is.na(any(Streams_sel$Site == s))){
Streams_site <- arc.data2sf(arc.select(Streams, where_clause = paste("Site = '", s, "'", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 2)){
Point_C <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == 1)){
Point_W <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Point_sel[Point_sel$Site==s,]$Subtype == c(0,3,4))){
Point_M <- arc.data2sf(arc.select(Point, where_clause = paste("Site = '", s, "' AND (Subtype = 0 OR Subtype = 3 OR Subtype = 4)", sep = "")))
Point_M <- Point_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc',
'3' = 'Beaver Dam',
'4' = 'Soil Sample'))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 1)){
Line_B <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == c(2,4))){
Line_C <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND (Subtype = 2 OR Subtype = 4)", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 3)){
Line_W <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Line_sel[Line_sel$Site==s,]$Subtype == 0)){
Line_M <- arc.data2sf(arc.select(Line, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Line_M <- Line_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 3)){
Poly_B <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 3", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 2)){
Poly_V <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 2", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 1)){
Poly_W <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 1", sep = "")))}
if(any(Poly_sel[Poly_sel$Site==s,]$Subtype == 0)){
Poly_M <- arc.data2sf(arc.select(Poly, where_clause = paste("Site = '", s, "' AND Subtype = 0", sep = "")))
Poly_M <- Poly_M %>%
mutate(Subtype = as.character(Subtype),
Subtype = recode(Subtype,
'0' = 'Misc'))}
render("./scripts/StewGDB_sites_mapped.Rmd",
output_file = paste0('../reports/PDFMapbySite/report.', s, '.pdf'))
